{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ANJANI IIT\\\\OneDrive\\\\Documents\\\\React1\\\\my-app\\\\src\\\\Dashboard.js\";\nimport React from 'react';\nimport './Dashboard.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      arrayvalue: [\"name\"],\n      editpostindex: null,\n      inputvalue: [],\n      // input values for signup\n      newinputusername: '',\n      newinputtext: ' ',\n      inputpostcontent: [],\n      inputusername: [],\n      message: 0,\n      like: [],\n      dislike: [],\n      likecnt: 0\n    };\n\n    this.editpost = index => {\n      this.setState({\n        editpostindex: index\n      });\n      this.setState({\n        newinputusername: this.state.inputusername[index]\n      });\n      this.setState({\n        newinputtext: this.state.inputpostcontent[index]\n      });\n    };\n\n    this.deletepost = index => {\n      const inputusername = this.state.inputusername;\n      const inputpostcontent = this.state.inputpostcontent;\n      inputpostcontent.splice(index, 1);\n      inputusername.splice(index, 1);\n      this.setState({\n        inputusername: inputusername\n      });\n      this.setState({\n        inputpostcontent: inputpostcontent\n      });\n      console.log(this.state.inputusername);\n      console.log(this.state.inputpostcontent);\n    };\n\n    this.clicklike = index => {\n      let newcnt = this.state.like[index] + 1;\n      this.state.like.splice(index, 1, newcnt);\n      this.setState({\n        editpostindex: null\n      }); // just to use setstate for rerendering cgnages\n\n      console.log(this.state.like);\n    };\n\n    this.clickdislike = index => {\n      let newcnt2 = this.state.dislike[index] + 1;\n      this.state.dislike.splice(index, 1, newcnt2);\n      this.setState({\n        editpostindex: null\n      }); // just to use setstate for rerendering cgnages\n\n      console.log(this.state.dislike);\n    };\n\n    this.username = e => {\n      if (this.state.editpostindex === null) {\n        this.setState({\n          message: 0\n        });\n        this.setState({\n          newinputusername: e.target.value\n        });\n        console.log(this.state.newinputusername);\n      }\n    };\n\n    this.postcontent = e => {\n      if (this.state.editpostindex === null) {\n        // for differentiating between editing and creating a post \n        this.setState({\n          newinputtext: e.target.value\n        });\n      } else {\n        this.setState({\n          newinputtext: e.target.value\n        });\n        console.log(this.state.newinputtext);\n      }\n    };\n\n    this.poststored = e => {\n      e.preventDefault();\n\n      if (this.state.editpostindex === null) {\n        this.state.inputusername.push(this.state.newinputusername);\n        this.state.inputpostcontent.push(this.state.newinputtext);\n        this.state.like.push(0);\n        this.state.dislike.push(0);\n        this.setState({\n          message: 1\n        });\n        this.setState({\n          newinputusername: ''\n        });\n        this.setState({\n          newinputtext: ''\n        });\n      } else {\n        const editedinputpostcontent = this.state.newinputtext;\n        this.state.inputpostcontent.splice(this.state.editpostindex, 1, editedinputpostcontent);\n        this.setState({\n          editpostindex: null\n        });\n      }\n\n      ;\n    };\n  }\n\n  render() {\n    let textinput = null;\n\n    if (this.state.inputpostcontent.length !== 0) {\n      // for showing posts\n      textinput = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.inputpostcontent.map((e, index) => {\n          return /*#__PURE__*/_jsxDEV(Showtext, {\n            username: this.state.inputusername[index],\n            postcontent: this.state.inputpostcontent[index],\n            clicklike: this.clicklike.bind(this, index),\n            clickdislike: this.clickdislike.bind(this, index),\n            likecnt: this.state.like[index],\n            dislikecnt: this.state.dislike[index],\n            edit: this.editpost.bind(this, index),\n            delete: this.deletepost.bind(this, index)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 65\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this);\n    }\n  }\n\n}\n\nexport const Navbar = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"navbar\",\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      class: \"dashboardlink\",\n      children: \" Dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      class: \"signuplink\",\n      children: \"Sign-Up\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n      class: \"signinlink\",\n      children: \"Sign-In\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 8\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 12\n  }, this);\n};\n_c = Navbar;\nexport const Textinput = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"heading\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"posttitle\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"headingtext\",\n        children: \"Type the Text_Input below\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 39\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"postfields\",\n        children: [\" uername:\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: props.username,\n          onChange: props.setusername\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 60\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 133\n        }, this), \"Post:\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"textbox\",\n          value: props.postcontent,\n          onChange: props.setpostcontent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 18\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 100\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: props.textstored,\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 11\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 8\n  }, this);\n};\n_c2 = Textinput;\nexport const Showtext = props => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"post\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upper\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"postusername\",\n          children: props.username\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 40\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"editbutton\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: props.edit,\n            type: \"button\",\n            children: \"edit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 50\n          }, this), \"\\xA0\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: props.delete,\n            type: \"button\",\n            children: \"delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 22\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"postcontent\",\n        children: props.postcontent\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"imglike\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            onClick: props.clicklike,\n            src: \"https://th.bing.com/th?q=Like+Emoticon&w=120&h=120&c=1&rs=1&qlt=90&cb=1&dpr=1.56&pid=InlineBlock&mkt=en-IN&adlt=moderate&t=1&mw=247 \",\n            alt: \"Like\",\n            width: \"25%\",\n            height: \"100%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 47\n          }, this), \"\\xA0\\xA0\", /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"textlike\",\n            children: props.likecnt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 22\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"imgdislike\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            onClick: props.clickdislike,\n            src: \"https://www.bing.com/th?id=OIP.aIlJZec72YFowfKKQBiN8gHaHa&w=96&h=95&c=8&rs=1&qlt=90&o=6&dpr=1.56&pid=3.1&rm=2\",\n            alt: \"Dislike\",\n            width: \"25%\",\n            height: \"100%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"textdislike\",\n            children: props.dislikecnt\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 141,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 74\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n};\n_c3 = Showtext;\nexport const Message = () => {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Item has been added \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 9\n  }, this);\n};\n_c4 = Message;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Navbar\");\n$RefreshReg$(_c2, \"Textinput\");\n$RefreshReg$(_c3, \"Showtext\");\n$RefreshReg$(_c4, \"Message\");","map":{"version":3,"sources":["C:/Users/ANJANI IIT/OneDrive/Documents/React1/my-app/src/Dashboard.js"],"names":["React","App","Component","state","arrayvalue","editpostindex","inputvalue","newinputusername","newinputtext","inputpostcontent","inputusername","message","like","dislike","likecnt","editpost","index","setState","deletepost","splice","console","log","clicklike","newcnt","clickdislike","newcnt2","username","e","target","value","postcontent","poststored","preventDefault","push","editedinputpostcontent","render","textinput","length","map","bind","Navbar","Textinput","props","setusername","setpostcontent","textstored","Showtext","edit","delete","dislikecnt","Message"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport './Dashboard.css';\r\nclass App extends Component {\r\nstate={\r\n    arrayvalue:[\"name\"],\r\n    editpostindex:null,\r\n    inputvalue:[],// input values for signup\r\n    newinputusername:'',newinputtext:' ',\r\n    inputpostcontent:[],inputusername:[],\r\n    message:0,\r\n    like:[],dislike:[],likecnt:0\r\n    \r\n\r\n}\r\neditpost = (index) =>{\r\n  this.setState({editpostindex:index});\r\n  this.setState({newinputusername:this.state.inputusername[index]});\r\n  this.setState({newinputtext:this.state.inputpostcontent[index]});\r\n}\r\ndeletepost = (index) => {\r\n const inputusername = this.state.inputusername;\r\n const inputpostcontent = this.state.inputpostcontent;\r\n inputpostcontent.splice(index,1);\r\n inputusername.splice(index,1);\r\n this.setState({inputusername:inputusername});\r\n this.setState({inputpostcontent:inputpostcontent});\r\n console.log(this.state.inputusername);\r\n console.log(this.state.inputpostcontent);\r\n}\r\nclicklike =(index)=>{\r\n let newcnt=this.state.like[index]+1;\r\n this.state.like.splice(index,1,newcnt);\r\n this.setState({editpostindex:null});// just to use setstate for rerendering cgnages\r\n console.log(this.state.like);\r\n}\r\nclickdislike =(index)=>{\r\n let newcnt2=this.state.dislike[index]+1;\r\n this.state.dislike.splice(index,1,newcnt2);\r\n this.setState({editpostindex:null});// just to use setstate for rerendering cgnages\r\n console.log(this.state.dislike);\r\n}\r\n\r\nusername = (e) =>{\r\n\r\n if(this.state.editpostindex===null){\r\n this.setState({message:0});\r\n this.setState({newinputusername:e.target.value});\r\n console.log(this.state.newinputusername);\r\n  \r\n}\r\n}\r\npostcontent = (e) =>{\r\n\r\nif(this.state.editpostindex===null){ // for differentiating between editing and creating a post \r\n this.setState({newinputtext:e.target.value});\r\n\r\n}\r\nelse{\r\n this.setState({newinputtext:e.target.value});\r\n console.log(this.state.newinputtext);\r\n}\r\n\r\n}\r\npoststored = (e) =>{\r\n e.preventDefault();\r\n if(this.state.editpostindex===null){   \r\n this.state.inputusername.push(this.state.newinputusername);\r\n this.state.inputpostcontent.push(this.state.newinputtext);\r\n this.state.like.push(0);\r\n this.state.dislike.push(0); \r\n this.setState({message:1});\r\n this.setState({newinputusername:''});\r\n this.setState({newinputtext:''});\r\n\r\n}\r\nelse{\r\n  \r\n  const editedinputpostcontent=this.state.newinputtext;\r\n  this.state.inputpostcontent.splice(this.state.editpostindex,1,editedinputpostcontent);\r\n  this.setState({editpostindex:null});\r\n  };\r\n \r\n\r\n}\r\nrender(){\r\n   \r\n    let textinput=null;\r\n    if((this.state.inputpostcontent.length !==0)){                                        // for showing posts\r\n      textinput=(\r\n        <div>\r\n          {this.state.inputpostcontent.map(( e,index) =>{return <Showtext \r\n                                                             key={index}\r\n                                                             username={this.state.inputusername[index]}\r\n                                                             postcontent={this.state.inputpostcontent[index]} \r\n                                                             clicklike={this.clicklike.bind(this,index)}\r\n                                                             clickdislike={this.clickdislike.bind(this,index)} \r\n                                                             likecnt={this.state.like[index]} \r\n                                                             dislikecnt={this.state.dislike[index]}\r\n                                                             edit={this.editpost.bind(this,index)}\r\n                                                             delete={this.deletepost.bind(this,index)} /> })\r\n                                                             }\r\n        </div>\r\n      );\r\n    }\r\n}}\r\nexport const Navbar =() =>{\r\n   return( <div className=\"navbar\">\r\n       <span class=\"dashboardlink\"> Dashboard</span>\r\n       <span class=\"signuplink\">Sign-Up</span>\r\n       <span class=\"signinlink\">Sign-In</span>\r\n    </div>);\r\n}\r\nexport const Textinput = (props) =>{\r\n\r\n   return(\r\n       <div className=\"heading\">\r\n         \r\n          <div className=\"posttitle\" ><p className=\"headingtext\">Type the Text_Input below</p>\r\n               \r\n                <div className=\"postfields\"> uername:&nbsp;<input type=\"text\" value={props.username}  onChange={props.setusername}/><br/>Post:&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;\r\n                 <input type=\"textbox\" value={props.postcontent}  onChange={props.setpostcontent}/><br/>\r\n                 <button  onClick={props.textstored}>Submit</button>\r\n                 </div>\r\n               \r\n          </div>\r\n       </div>\r\n   ); \r\n}\r\n\r\nexport const Showtext = (props) =>{\r\n    return(\r\n        <div className=\"post\">\r\n            <div>\r\n                <div className=\"upper\"><p className=\"postusername\">{props.username}</p>\r\n                     <div className=\"editbutton\"><button onClick={props.edit} type=\"button\">edit</button>&nbsp;&nbsp;&nbsp;\r\n                     <button onClick={props.delete} type=\"button\">delete</button></div></div>\r\n                <p className=\"postcontent\">{props.postcontent}</p>\r\n                <div><div className=\"imglike\"><img  onClick={props.clicklike} src=\"https://th.bing.com/th?q=Like+Emoticon&w=120&h=120&c=1&rs=1&qlt=90&cb=1&dpr=1.56&pid=InlineBlock&mkt=en-IN&adlt=moderate&t=1&mw=247 \" alt=\"Like\" width=\"25%\" height=\"100%\"/>&nbsp;&nbsp;\r\n                        <p className=\"textlike\">{props.likecnt}</p></div><div className=\"imgdislike\">\r\n                        <img onClick={props.clickdislike} src=\"https://www.bing.com/th?id=OIP.aIlJZec72YFowfKKQBiN8gHaHa&w=96&h=95&c=8&rs=1&qlt=90&o=6&dpr=1.56&pid=3.1&rm=2\" alt=\"Dislike\" width=\"25%\" height=\"100%\"/>\r\n                        <p className=\"textdislike\">{props.dislikecnt}</p></div></div>\r\n            </div> \r\n        </div>\r\n    );\r\n}\r\n\r\nexport const Message = () => {\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <p>Item has been added </p>\r\n        </div>\r\n        \r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}