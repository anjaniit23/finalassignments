{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ANJANI IIT\\\\OneDrive\\\\Desktop\\\\AnjaniB\\\\my-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Signup from './Signup.js';\nimport SignIn from './SignIn.js';\nimport Navbar from './Navbar.js';\nimport Posts from './Post.js';\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport setAuthToken from './utils/setAuthToken.js';\nimport jwt_decode from 'jwt-decode';\nimport { logoutUser, setCurrentUser } from './actions/authActions.js'; //check for token and een if we switch pages and efresh it it wont affect the localstorgae jwttoken\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nif (localStorage.jwtToken) {\n  //set auth token header auth\n  setAuthToken(localStorage.jwtToken); //decode token and get user info and exp\n\n  const decoded = jwt_decode(localStorage.jwtToken); //set user and isAuthenticated\n\n  store.dispatch(setCurrentUser(decoded)); //check for expired token\n\n  const currenttime = Date.now() / 1000;\n\n  if (decoded.exp < currenttime) {\n    //logout user\n    store.dispatch(logoutUser()); //redirect to login page\n\n    window.location.href = '/Signin';\n  }\n}\n\nclass App extends Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(Provider, {\n      store: store,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"app\",\n        children: /*#__PURE__*/_jsxDEV(Router, {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"navbardiv\",\n            children: /*#__PURE__*/_jsxDEV(Route, {\n              path: \"/\",\n              component: Navbar\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 9\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"restpagestdiv\",\n            children: [/*#__PURE__*/_jsxDEV(Switch, {\n              children: /*#__PURE__*/_jsxDEV(Route, {\n                exact: true,\n                path: \"/dashboard\",\n                component: Posts\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Switch, {\n              children: /*#__PURE__*/_jsxDEV(Route, {\n                exact: true,\n                path: \"/Signup\",\n                component: Signup\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(Switch, {\n              children: /*#__PURE__*/_jsxDEV(Route, {\n                exact: true,\n                path: \"/SignIn\",\n                component: SignIn\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 9\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 7\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/ANJANI IIT/OneDrive/Desktop/AnjaniB/my-app/src/App.js"],"names":["React","Component","Signup","SignIn","Navbar","Posts","BrowserRouter","Router","Route","Switch","Provider","store","setAuthToken","jwt_decode","logoutUser","setCurrentUser","localStorage","jwtToken","decoded","dispatch","currenttime","Date","now","exp","window","location","href","App","render"],"mappings":";AAAA,OAAOA,KAAP,IAAcC,SAAd,QAA8B,OAA9B;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,OAAOC,KAAP,MAAmB,WAAnB;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAwCC,MAAxC,QAAqD,kBAArD;AACA,SAAQC,QAAR,QAAuB,aAAvB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,YAAP,MAAyB,yBAAzB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,SAASC,UAAT,EAAqBC,cAArB,QAA2C,0BAA3C,C,CAEA;;;;AACA,IAAGC,YAAY,CAACC,QAAhB,EAAyB;AACvB;AACAL,EAAAA,YAAY,CAACI,YAAY,CAACC,QAAd,CAAZ,CAFuB,CAGvB;;AACA,QAAMC,OAAO,GAAGL,UAAU,CAACG,YAAY,CAACC,QAAd,CAA1B,CAJuB,CAKvB;;AACAN,EAAAA,KAAK,CAACQ,QAAN,CAAeJ,cAAc,CAACG,OAAD,CAA7B,EANuB,CAOvB;;AACA,QAAME,WAAW,GAAEC,IAAI,CAACC,GAAL,KAAW,IAA9B;;AACA,MAAGJ,OAAO,CAACK,GAAR,GAAYH,WAAf,EAA2B;AACzB;AACAT,IAAAA,KAAK,CAACQ,QAAN,CAAeL,UAAU,EAAzB,EAFyB,CAGzB;;AACAU,IAAAA,MAAM,CAACC,QAAP,CAAgBC,IAAhB,GAAqB,SAArB;AACD;AACF;;AACD,MAAMC,GAAN,SAAkB1B,SAAlB,CAA4B;AAC5B2B,EAAAA,MAAM,GAAE;AAEN,wBAEE,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEjB,KAAjB;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACA,QAAC,MAAD;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,WAAf;AAAA,mCACA,QAAC,KAAD;AAAQ,cAAA,IAAI,EAAC,GAAb;AAAkB,cAAA,SAAS,EAAEP;AAA7B;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE;AAAK,YAAA,SAAS,EAAC,eAAf;AAAA,oCACE,QAAC,MAAD;AAAA,qCAAQ,QAAC,KAAD;AAAO,gBAAA,KAAK,MAAZ;AAAa,gBAAA,IAAI,EAAC,YAAlB;AAAgC,gBAAA,SAAS,EAAEC;AAA3C;AAAA;AAAA;AAAA;AAAA;AAAR;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,MAAD;AAAA,qCAAQ,QAAC,KAAD;AAAO,gBAAA,KAAK,MAAZ;AAAa,gBAAA,IAAI,EAAC,SAAlB;AAA4B,gBAAA,SAAS,EAAEH;AAAvC;AAAA;AAAA;AAAA;AAAA;AAAR;AAAA;AAAA;AAAA;AAAA,oBAFF,eAGE,QAAC,MAAD;AAAA,qCAAQ,QAAC,KAAD;AAAO,gBAAA,KAAK,MAAZ;AAAa,gBAAA,IAAI,EAAC,SAAlB;AAA4B,gBAAA,SAAS,EAAEC;AAAvC;AAAA;AAAA;AAAA;AAAA;AAAR;AAAA;AAAA;AAAA;AAAA,oBAHF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF;AAiBD;;AApB2B;;AAsB5B,eAAewB,GAAf","sourcesContent":["import React,{Component} from 'react';\nimport Signup from './Signup.js';\nimport SignIn from './SignIn.js';\nimport Navbar from './Navbar.js';\nimport Posts  from './Post.js';\nimport { BrowserRouter as Router, Route,Switch} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport setAuthToken from './utils/setAuthToken.js';\nimport jwt_decode from 'jwt-decode';\nimport { logoutUser, setCurrentUser } from './actions/authActions.js';\n\n//check for token and een if we switch pages and efresh it it wont affect the localstorgae jwttoken\nif(localStorage.jwtToken){\n  //set auth token header auth\n  setAuthToken(localStorage.jwtToken);\n  //decode token and get user info and exp\n  const decoded = jwt_decode(localStorage.jwtToken);\n  //set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n  //check for expired token\n  const currenttime= Date.now()/1000;\n  if(decoded.exp<currenttime){\n    //logout user\n    store.dispatch(logoutUser());\n    //redirect to login page\n    window.location.href='/Signin';\n  }\n}\nclass App extends Component {\nrender(){\n \n  return (\n    \n    <Provider store={store}>\n      <div className=\"app\">\n      <Router>\n        <div className=\"navbardiv\">\n        <Route  path=\"/\"  component={Navbar}/>\n        </div>\n        <div className=\"restpagestdiv\">\n          <Switch><Route exact path=\"/dashboard\"  component={Posts}/></Switch>\n          <Switch><Route exact path=\"/Signup\" component={Signup}/></Switch>\n          <Switch><Route exact path=\"/SignIn\" component={SignIn}/></Switch>\n        </div>\n      </Router>\n      </div>\n    </Provider>\n  );\n}}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}