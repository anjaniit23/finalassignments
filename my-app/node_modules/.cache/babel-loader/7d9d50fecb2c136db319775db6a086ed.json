{"ast":null,"code":"import{GET_ERRORS,SET_CURRENT_USER}from'./types';import axios from'axios';import setAuthToken from'../utils/setAuthToken';import jwt_decode from'jwt-decode';//Register user\nexport var registerUser=function registerUser(userData,history){return function(dispatch){axios.post(\"/api/users/register\",userData).then(function(res){return history.push('/SignIn');}).catch(function(err){return dispatch({type:GET_ERRORS,payload:err.response.data});});};};// // inside the state componet of SignUp.js..we could have used this.props.history.push('/Signin');\n// to direct tio login page whenever the Signup is done\n//login get user token\nexport var loginUser=function loginUser(userData){return function(dispatch){axios.post(\"/api/users/login\",userData).then(function(res){//save to localstorage\nvar token=res.data.token1;//set token to ls\nlocalStorage.setItem('jwtToken',token);//set token to auth header\nsetAuthToken(token);// decode token to get user data\nvar decoded=jwt_decode(token);//set current user\ndispatch(setCurrentUser(decoded));}).catch(function(err){dispatch({type:GET_ERRORS,payload:err.response.data});});};};//set logged in user\nexport var setCurrentUser=function setCurrentUser(decoded){return{type:SET_CURRENT_USER,payload:decoded};};// log user out\nexport var logoutUser=function logoutUser(){return function(dispatch){//remove token from localstorage\nlocalStorage.removeItem('jwtToken');//remove auth header for future requests\nsetAuthToken(false);//set current user to {} which will set isAutheticated to false\ndispatch(setCurrentUser({}));};};","map":{"version":3,"sources":["C:/Users/ANJANI IIT/OneDrive/Desktop/AnjaniB/my-app/src/actions/authActions.js"],"names":["GET_ERRORS","SET_CURRENT_USER","axios","setAuthToken","jwt_decode","registerUser","userData","history","dispatch","post","then","res","push","catch","err","type","payload","response","data","loginUser","token","token1","localStorage","setItem","decoded","setCurrentUser","logoutUser","removeItem"],"mappings":"AAAA,OAAQA,UAAR,CAAmBC,gBAAnB,KAA0C,SAA1C,CACA,MAAOC,CAAAA,KAAP,KAAkB,OAAlB,CACA,MAAOC,CAAAA,YAAP,KAAyB,uBAAzB,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA;AACA,MAAO,IAAMC,CAAAA,YAAY,CAAE,QAAdA,CAAAA,YAAc,CAACC,QAAD,CAAUC,OAAV,QAAoB,UAAAC,QAAQ,CAAE,CACtDN,KAAK,CAACO,IAAN,uBAAkCH,QAAlC,EACEI,IADF,CACO,SAAAC,GAAG,QAAEJ,CAAAA,OAAO,CAACK,IAAR,CAAa,SAAb,CAAF,EADV,EAEEC,KAFF,CAEQ,SAAAC,GAAG,QAAEN,CAAAA,QAAQ,CAAC,CACjBO,IAAI,CAACf,UADY,CAEjBgB,OAAO,CAACF,GAAG,CAACG,QAAJ,CAAaC,IAFJ,CAAD,CAAV,EAFX,EAMF,CAP0B,EAApB,CAQP;AACA;AACA;AACA,MAAO,IAAMC,CAAAA,SAAS,CAAC,QAAVA,CAAAA,SAAU,CAAAb,QAAQ,QAAE,UAAAE,QAAQ,CAAE,CACvCN,KAAK,CAACO,IAAN,oBAA8BH,QAA9B,EACMI,IADN,CACW,SAAAC,GAAG,CAAE,CAEP;AACA,GAAMS,CAAAA,KAAK,CAAGT,GAAG,CAACO,IAAJ,CAASG,MAAvB,CAEA;AACAC,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAgCH,KAAhC,EACA;AACAjB,YAAY,CAACiB,KAAD,CAAZ,CACA;AACA,GAAMI,CAAAA,OAAO,CAAEpB,UAAU,CAACgB,KAAD,CAAzB,CACA;AACAZ,QAAQ,CAACiB,cAAc,CAACD,OAAD,CAAf,CAAR,CACH,CAdN,EAeMX,KAfN,CAeY,SAAAC,GAAG,CAAE,CAETN,QAAQ,CAAC,CACLO,IAAI,CAACf,UADA,CAELgB,OAAO,CAACF,GAAG,CAACG,QAAJ,CAAaC,IAFhB,CAAD,CAAR,CAGG,CApBX,EAqBH,CAtB8B,EAAxB,CAwBP;AACA,MAAO,IAAMO,CAAAA,cAAc,CAAC,QAAfA,CAAAA,cAAe,CAACD,OAAD,CAAW,CACnC,MAAO,CACHT,IAAI,CAACd,gBADF,CAEHe,OAAO,CAACQ,OAFL,CAAP,CAIH,CALM,CAMP;AACA,MAAO,IAAME,CAAAA,UAAU,CAAC,QAAXA,CAAAA,UAAW,SAAI,UAAAlB,QAAQ,CAAE,CAClC;AACAc,YAAY,CAACK,UAAb,CAAwB,UAAxB,EACA;AACAxB,YAAY,CAAC,KAAD,CAAZ,CACA;AACAK,QAAQ,CAACiB,cAAc,CAAC,EAAD,CAAf,CAAR,CACH,CAPuB,EAAjB","sourcesContent":["import {GET_ERRORS,SET_CURRENT_USER} from './types';\r\nimport axios from 'axios';\r\nimport setAuthToken from '../utils/setAuthToken';\r\nimport jwt_decode from 'jwt-decode';\r\n//Register user\r\nexport const registerUser =(userData,history)=>dispatch=>{\r\n   axios.post(`/api/users/register`, userData)\r\n    .then(res=>history.push('/SignIn'))\r\n    .catch(err=>dispatch({\r\n        type:GET_ERRORS,\r\n        payload:err.response.data\r\n    }));\r\n};\r\n// // inside the state componet of SignUp.js..we could have used this.props.history.push('/Signin');\r\n// to direct tio login page whenever the Signup is done\r\n//login get user token\r\nexport const loginUser=userData=>dispatch=>{\r\n    axios.post(`/api/users/login`,userData)\r\n         .then(res=>{\r\n            \r\n             //save to localstorage\r\n             const token = res.data.token1;\r\n         \r\n             //set token to ls\r\n             localStorage.setItem('jwtToken',token);\r\n             //set token to auth header\r\n             setAuthToken(token);\r\n             // decode token to get user data\r\n             const decoded= jwt_decode(token);\r\n             //set current user\r\n             dispatch(setCurrentUser(decoded));\r\n         })\r\n         .catch(err=>{\r\n\r\n            dispatch({\r\n                type:GET_ERRORS,\r\n                payload:err.response.data\r\n            })});\r\n};\r\n\r\n//set logged in user\r\nexport const setCurrentUser=(decoded)=>{\r\n    return {\r\n        type:SET_CURRENT_USER,\r\n        payload:decoded\r\n    }\r\n}\r\n// log user out\r\nexport const logoutUser=()=>dispatch=>{\r\n    //remove token from localstorage\r\n    localStorage.removeItem('jwtToken');\r\n    //remove auth header for future requests\r\n    setAuthToken(false);\r\n    //set current user to {} which will set isAutheticated to false\r\n    dispatch(setCurrentUser({}));\r\n}\r\n"]},"metadata":{},"sourceType":"module"}