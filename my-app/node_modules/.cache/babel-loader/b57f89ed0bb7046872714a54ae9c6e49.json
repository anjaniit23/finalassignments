{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ANJANI IIT\\\\OneDrive\\\\Documents\\\\React1\\\\my-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Signup from './Signup.js';\nimport Signin from './SignIn.js';\nimport './App.css';\nimport { Textinput, Showtext, Message, Navbar } from './Dashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      arrayvalue: [\"name\"],\n      editpostindex: null,\n      inputvalue: [],\n      // input values for signup\n      inputvaluelength: 5,\n      newinputusername: '',\n      newinputtext: ' ',\n      inputpostcontent: [],\n      inputusername: [],\n      message: 0,\n      like: [],\n      dislike: [],\n      likecnt: 0\n    };\n\n    this.editpost = index => {\n      this.setState({\n        editpostindex: index\n      });\n      this.setState({\n        newinputusername: this.state.inputusername[index]\n      });\n      this.setState({\n        newinputtext: this.state.inputpostcontent[index]\n      });\n    };\n\n    this.deletepost = index => {\n      const inputusername = this.state.inputusername;\n      const inputpostcontent = this.state.inputpostcontent;\n      inputpostcontent.splice(index, 1);\n      inputusername.splice(index, 1);\n      this.setState({\n        inputusername: inputusername\n      });\n      this.setState({\n        inputpostcontent: inputpostcontent\n      });\n      console.log(this.state.inputusername);\n      console.log(this.state.inputpostcontent);\n    };\n\n    this.clicklike = index => {\n      let newcnt = this.state.like[index] + 1;\n      this.state.like.splice(index, 1, newcnt);\n      this.setState({\n        editpostindex: null\n      }); // just to use setstate for rerendering cgnages\n\n      console.log(this.state.like);\n    };\n\n    this.clickdislike = index => {\n      let newcnt2 = this.state.dislike[index] + 1;\n      this.state.dislike.splice(index, 1, newcnt2);\n      this.setState({\n        editpostindex: null\n      }); // just to use setstate for rerendering cgnages\n\n      console.log(this.state.dislike);\n    };\n\n    this.username = e => {\n      if (this.state.editpostindex === null) {\n        this.setState({\n          message: 0\n        });\n        this.setState({\n          newinputusername: e.target.value\n        });\n        console.log(this.state.newinputusername);\n      }\n    };\n\n    this.postcontent = e => {\n      if (this.state.editpostindex === null) {\n        // for differentiating between editing and creating a post \n        this.setState({\n          newinputtext: e.target.value\n        });\n      } else {\n        this.setState({\n          newinputtext: e.target.value\n        });\n        console.log(this.state.newinputtext);\n      }\n    };\n\n    this.poststored = e => {\n      e.preventDefault();\n\n      if (this.state.editpostindex === null) {\n        this.state.inputusername.push(this.state.newinputusername);\n        this.state.inputpostcontent.push(this.state.newinputtext);\n        this.state.like.push(0);\n        this.state.dislike.push(0);\n        this.setState({\n          message: 1\n        });\n        this.setState({\n          newinputusername: ''\n        });\n        this.setState({\n          newinputtext: ''\n        });\n      } else {\n        const editedinputpostcontent = this.state.newinputtext;\n        this.state.inputpostcontent.splice(this.state.editpostindex, 1, editedinputpostcontent);\n        this.setState({\n          editpostindex: null\n        });\n      }\n\n      ;\n    };\n  }\n\n  render() {\n    let textinput = null;\n\n    if (this.state.inputpostcontent.length !== 0) {\n      // for showing posts\n      textinput = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.inputpostcontent.map((e, index) => {\n          return /*#__PURE__*/_jsxDEV(Showtext, {\n            username: this.state.inputusername[index],\n            postcontent: this.state.inputpostcontent[index],\n            clicklike: this.clicklike.bind(this, index),\n            clickdislike: this.clickdislike.bind(this, index),\n            likecnt: this.state.like[index],\n            dislikecnt: this.state.dislike[index],\n            edit: this.editpost.bind(this, index),\n            delete: this.deletepost.bind(this, index)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 65\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }, this), this.state.message ? /*#__PURE__*/_jsxDEV(Message, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 27\n      }, this) : null, /*#__PURE__*/_jsxDEV(Textinput, {\n        username: this.state.newinputusername,\n        setusername: this.username,\n        postcontent: this.state.newinputtext,\n        setpostcontent: this.postcontent,\n        textstored: this.poststored\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 7\n      }, this), textinput, /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 123,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Signin, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 12\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/ANJANI IIT/OneDrive/Documents/React1/my-app/src/App.js"],"names":["React","Component","Signup","Signin","Textinput","Showtext","Message","Navbar","App","state","arrayvalue","editpostindex","inputvalue","inputvaluelength","newinputusername","newinputtext","inputpostcontent","inputusername","message","like","dislike","likecnt","editpost","index","setState","deletepost","splice","console","log","clicklike","newcnt","clickdislike","newcnt2","username","e","target","value","postcontent","poststored","preventDefault","push","editedinputpostcontent","render","textinput","length","map","bind"],"mappings":"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","sourcesContent":["\nimport React,{Component} from 'react';\nimport Signup from './Signup.js';\nimport Signin from './SignIn.js';\nimport './App.css';\nimport  {Textinput,Showtext,Message, Navbar} from './Dashboard';\n\nclass App extends Component {\n \n  state={\n       arrayvalue:[\"name\"],\n      editpostindex:null,\n       inputvalue:[],// input values for signup\n       inputvaluelength:5,newinputusername:'',newinputtext:' ',\n       inputpostcontent:[],inputusername:[],\n       message:0,\n       like:[],dislike:[],likecnt:0\n       \n\n  }\n  editpost = (index) =>{\n     this.setState({editpostindex:index});\n     this.setState({newinputusername:this.state.inputusername[index]});\n     this.setState({newinputtext:this.state.inputpostcontent[index]});\n  }\n  deletepost = (index) => {\n    const inputusername = this.state.inputusername;\n    const inputpostcontent = this.state.inputpostcontent;\n    inputpostcontent.splice(index,1);\n    inputusername.splice(index,1);\n    this.setState({inputusername:inputusername});\n    this.setState({inputpostcontent:inputpostcontent});\n    console.log(this.state.inputusername);\n    console.log(this.state.inputpostcontent);\n  }\n  clicklike =(index)=>{\n    let newcnt=this.state.like[index]+1;\n    this.state.like.splice(index,1,newcnt);\n    this.setState({editpostindex:null});// just to use setstate for rerendering cgnages\n    console.log(this.state.like);\n  }\n  clickdislike =(index)=>{\n    let newcnt2=this.state.dislike[index]+1;\n    this.state.dislike.splice(index,1,newcnt2);\n    this.setState({editpostindex:null});// just to use setstate for rerendering cgnages\n    console.log(this.state.dislike);\n  }\n \n  username = (e) =>{\n   \n    if(this.state.editpostindex===null){\n    this.setState({message:0});\n    this.setState({newinputusername:e.target.value});\n    console.log(this.state.newinputusername);\n     \n  }\n  \n  \n  }\n  postcontent = (e) =>{\n   \n  if(this.state.editpostindex===null){ // for differentiating between editing and creating a post \n    this.setState({newinputtext:e.target.value});\n\n  }\n  else{\n    this.setState({newinputtext:e.target.value});\n    console.log(this.state.newinputtext);\n  }\n\n  }\n  poststored = (e) =>{\n    e.preventDefault();\n    if(this.state.editpostindex===null){   \n    this.state.inputusername.push(this.state.newinputusername);\n    this.state.inputpostcontent.push(this.state.newinputtext);\n    this.state.like.push(0);\n    this.state.dislike.push(0); \n    this.setState({message:1});\n    this.setState({newinputusername:''});\n    this.setState({newinputtext:''});\n   \n  }\n   else{\n     \n     const editedinputpostcontent=this.state.newinputtext;\n     this.state.inputpostcontent.splice(this.state.editpostindex,1,editedinputpostcontent);\n     this.setState({editpostindex:null});\n     };\n    \n\n   }\n\nrender(){\n   \n    let textinput=null;\n    if((this.state.inputpostcontent.length !==0)){                                        // for showing posts\n      textinput=(\n        <div>\n          {this.state.inputpostcontent.map(( e,index) =>{return <Showtext \n                                                             key={index}\n                                                             username={this.state.inputusername[index]}\n                                                             postcontent={this.state.inputpostcontent[index]} \n                                                             clicklike={this.clicklike.bind(this,index)}\n                                                             clickdislike={this.clickdislike.bind(this,index)} \n                                                             likecnt={this.state.like[index]} \n                                                             dislikecnt={this.state.dislike[index]}\n                                                             edit={this.editpost.bind(this,index)}\n                                                             delete={this.deletepost.bind(this,index)} /> })\n                                                             }\n        </div>\n      );\n    }\n   \n  \n\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      {this.state.message?<Message/>:null}\n      <Textinput username={this.state.newinputusername} setusername={this.username} postcontent={this.state.newinputtext} setpostcontent={this.postcontent} textstored={this.poststored} />\n      {textinput}\n      <div><Signup /></div>\n      <div><Signin /></div>\n\n    </div>\n  );\n}}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}