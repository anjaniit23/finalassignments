{"ast":null,"code":"import _classCallCheck from\"C:/Users/ANJANI IIT/OneDrive/Desktop/AnjaniB/my-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"C:/Users/ANJANI IIT/OneDrive/Desktop/AnjaniB/my-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _inherits from\"C:/Users/ANJANI IIT/OneDrive/Desktop/AnjaniB/my-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"C:/Users/ANJANI IIT/OneDrive/Desktop/AnjaniB/my-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from'react';import Signup from'./Signup.js';import SignIn from'./SignIn.js';import Navbar from'./Navbar.js';import Posts from'./Post.js';import{BrowserRouter as Router,Route,Switch}from'react-router-dom';import{Provider}from'react-redux';import store from'./store';import setAuthToken from'./utils/setAuthToken.js';import jwt_decode from'jwt-decode';import{logoutUser,setCurrentUser}from'./actions/authActions.js';//check for token and een if we switch pages and efresh it it wont affect the localstorgae jwttoken\nimport{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";if(localStorage.jwtToken){//set auth token header auth\nsetAuthToken(localStorage.jwtToken);//decode token and get user info and exp\nvar decoded=jwt_decode(localStorage.jwtToken);//set user and isAuthenticated\nstore.dispatch(setCurrentUser(decoded));//check for expired token\nvar currenttime=Date.now()/1000;if(decoded.exp<currenttime){//logout user\nstore.dispatch(logoutUser());//redirect to login page\nwindow.location.href='/Signin';}}var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){_classCallCheck(this,App);return _super.apply(this,arguments);}_createClass(App,[{key:\"render\",value:function render(){return/*#__PURE__*/_jsx(Provider,{store:store,children:/*#__PURE__*/_jsx(\"div\",{className:\"app\",children:/*#__PURE__*/_jsxs(Router,{children:[/*#__PURE__*/_jsx(\"div\",{className:\"navbardiv\",children:/*#__PURE__*/_jsx(Route,{path:\"/\",component:Navbar})}),/*#__PURE__*/_jsxs(\"div\",{className:\"restpagestdiv\",children:[/*#__PURE__*/_jsx(Switch,{children:/*#__PURE__*/_jsx(Route,{exact:true,path:\"/dashboard\",component:Posts})}),/*#__PURE__*/_jsx(Switch,{children:/*#__PURE__*/_jsx(Route,{exact:true,path:\"/Signup\",component:Signup})}),/*#__PURE__*/_jsx(Switch,{children:/*#__PURE__*/_jsx(Route,{exact:true,path:\"/SignIn\",component:SignIn})})]})]})})});}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["C:/Users/ANJANI IIT/OneDrive/Desktop/AnjaniB/my-app/src/App.js"],"names":["React","Component","Signup","SignIn","Navbar","Posts","BrowserRouter","Router","Route","Switch","Provider","store","setAuthToken","jwt_decode","logoutUser","setCurrentUser","localStorage","jwtToken","decoded","dispatch","currenttime","Date","now","exp","window","location","href","App"],"mappings":"wgBAAA,MAAOA,CAAAA,KAAP,EAAcC,SAAd,KAA8B,OAA9B,CACA,MAAOC,CAAAA,MAAP,KAAmB,aAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,aAAnB,CACA,MAAOC,CAAAA,MAAP,KAAmB,aAAnB,CACA,MAAOC,CAAAA,KAAP,KAAmB,WAAnB,CACA,OAASC,aAAa,GAAIC,CAAAA,MAA1B,CAAkCC,KAAlC,CAAwCC,MAAxC,KAAqD,kBAArD,CACA,OAAQC,QAAR,KAAuB,aAAvB,CACA,MAAOC,CAAAA,KAAP,KAAkB,SAAlB,CACA,MAAOC,CAAAA,YAAP,KAAyB,yBAAzB,CACA,MAAOC,CAAAA,UAAP,KAAuB,YAAvB,CACA,OAASC,UAAT,CAAqBC,cAArB,KAA2C,0BAA3C,CAEA;wFACA,GAAGC,YAAY,CAACC,QAAhB,CAAyB,CACvB;AACAL,YAAY,CAACI,YAAY,CAACC,QAAd,CAAZ,CACA;AACA,GAAMC,CAAAA,OAAO,CAAGL,UAAU,CAACG,YAAY,CAACC,QAAd,CAA1B,CACA;AACAN,KAAK,CAACQ,QAAN,CAAeJ,cAAc,CAACG,OAAD,CAA7B,EACA;AACA,GAAME,CAAAA,WAAW,CAAEC,IAAI,CAACC,GAAL,GAAW,IAA9B,CACA,GAAGJ,OAAO,CAACK,GAAR,CAAYH,WAAf,CAA2B,CACzB;AACAT,KAAK,CAACQ,QAAN,CAAeL,UAAU,EAAzB,EACA;AACAU,MAAM,CAACC,QAAP,CAAgBC,IAAhB,CAAqB,SAArB,CACD,CACF,C,GACKC,CAAAA,G,8MACN,iBAAQ,CAEN,mBAEE,KAAC,QAAD,EAAU,KAAK,CAAEhB,KAAjB,uBACE,YAAK,SAAS,CAAC,KAAf,uBACA,MAAC,MAAD,yBACE,YAAK,SAAS,CAAC,WAAf,uBACA,KAAC,KAAD,EAAQ,IAAI,CAAC,GAAb,CAAkB,SAAS,CAAEP,MAA7B,EADA,EADF,cAIE,aAAK,SAAS,CAAC,eAAf,wBACE,KAAC,MAAD,wBAAQ,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,YAAlB,CAAgC,SAAS,CAAEC,KAA3C,EAAR,EADF,cAEE,KAAC,MAAD,wBAAQ,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,SAAlB,CAA4B,SAAS,CAAEH,MAAvC,EAAR,EAFF,cAGE,KAAC,MAAD,wBAAQ,KAAC,KAAD,EAAO,KAAK,KAAZ,CAAa,IAAI,CAAC,SAAlB,CAA4B,SAAS,CAAEC,MAAvC,EAAR,EAHF,GAJF,GADA,EADF,EAFF,CAiBD,C,iBApBiBF,S,EAsBlB,cAAe0B,CAAAA,GAAf","sourcesContent":["import React,{Component} from 'react';\nimport Signup from './Signup.js';\nimport SignIn from './SignIn.js';\nimport Navbar from './Navbar.js';\nimport Posts  from './Post.js';\nimport { BrowserRouter as Router, Route,Switch} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport setAuthToken from './utils/setAuthToken.js';\nimport jwt_decode from 'jwt-decode';\nimport { logoutUser, setCurrentUser } from './actions/authActions.js';\n\n//check for token and een if we switch pages and efresh it it wont affect the localstorgae jwttoken\nif(localStorage.jwtToken){\n  //set auth token header auth\n  setAuthToken(localStorage.jwtToken);\n  //decode token and get user info and exp\n  const decoded = jwt_decode(localStorage.jwtToken);\n  //set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n  //check for expired token\n  const currenttime= Date.now()/1000;\n  if(decoded.exp<currenttime){\n    //logout user\n    store.dispatch(logoutUser());\n    //redirect to login page\n    window.location.href='/Signin';\n  }\n}\nclass App extends Component {\nrender(){\n \n  return (\n    \n    <Provider store={store}>\n      <div className=\"app\">\n      <Router>\n        <div className=\"navbardiv\">\n        <Route  path=\"/\"  component={Navbar}/>\n        </div>\n        <div className=\"restpagestdiv\">\n          <Switch><Route exact path=\"/dashboard\"  component={Posts}/></Switch>\n          <Switch><Route exact path=\"/Signup\" component={Signup}/></Switch>\n          <Switch><Route exact path=\"/SignIn\" component={SignIn}/></Switch>\n        </div>\n      </Router>\n      </div>\n    </Provider>\n  );\n}}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}