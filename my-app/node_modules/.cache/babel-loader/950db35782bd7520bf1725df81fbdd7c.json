{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\ANJANI IIT\\\\OneDrive\\\\Documents\\\\React1\\\\my-app\\\\src\\\\App.js\";\nimport React, { Component } from 'react';\nimport Signup from './Signup.js';\nimport Signin from './SignIn.js';\nimport './App.css';\nimport { Textinput, Showtext, Message, Navbar } from './Dashboard';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      arrayvalue: [\"name\"],\n      //  arrayFields:[\"Email Id\",\"Name\",\"Phone no.\",\"Password\",\"Confirm Password\"],\n      //  arrayFieldstype:[\"email\",\"text\",\"number\",\"password\",\"password\"],\n      //  Signupdetails:false,\n      //  SignIndetails:false,\n      editpostindex: null,\n      //  inputsigninemail:null,inputsigninpassword:null,\n      inputvalue: [],\n      // input values for signup\n      inputvaluelength: 5,\n      newinputusername: '',\n      newinputtext: ' ',\n      inputpostcontent: [],\n      inputusername: [],\n      message: 0,\n      like: [],\n      dislike: [],\n      likecnt: 0\n    };\n\n    this.editpost = index => {\n      this.setState({\n        editpostindex: index\n      });\n      this.setState({\n        newinputusername: this.state.inputusername[index]\n      });\n      this.setState({\n        newinputtext: this.state.inputpostcontent[index]\n      });\n    };\n\n    this.deletepost = index => {\n      const inputusername = this.state.inputusername;\n      const inputpostcontent = this.state.inputpostcontent;\n      inputpostcontent.splice(index, 1);\n      inputusername.splice(index, 1);\n      this.setState({\n        inputusername: inputusername\n      });\n      this.setState({\n        inputpostcontent: inputpostcontent\n      });\n      console.log(this.state.inputusername);\n      console.log(this.state.inputpostcontent);\n    };\n\n    this.clicklike = index => {\n      let newcnt = this.state.like[index] + 1;\n      this.state.like.splice(index, 1, newcnt);\n      this.setState({\n        editpostindex: null\n      }); // just to use setstate for rerendering cgnages\n\n      console.log(this.state.like);\n    };\n\n    this.clickdislike = index => {\n      let newcnt2 = this.state.dislike[index] + 1;\n      this.state.dislike.splice(index, 1, newcnt2);\n      this.setState({\n        editpostindex: null\n      }); // just to use setstate for rerendering cgnages\n\n      console.log(this.state.dislike);\n    };\n\n    this.valuetyped = e => {\n      this.setState({\n        newinput: e.target.value\n      });\n    };\n\n    this.valuestored = () => {\n      if (this.state.inputvalue.length <= this.state.inputvaluelength) {\n        this.state.inputvalue.push(this.state.newinput);\n      }\n\n      if (this.state.inputvalue.length === this.state.inputvaluelength + 1) {\n        this.state.inputvalue.shift();\n        this.setState({\n          inputvaluelength: 0\n        });\n      }\n    };\n\n    this.username = e => {\n      if (this.state.editpostindex === null) {\n        this.setState({\n          message: 0\n        });\n        this.setState({\n          newinputusername: e.target.value\n        });\n        console.log(this.state.newinputusername);\n      }\n    };\n\n    this.postcontent = e => {\n      if (this.state.editpostindex === null) {\n        // for differentiating between editing and creating a post \n        this.setState({\n          newinputtext: e.target.value\n        });\n      } else {\n        this.setState({\n          newinputtext: e.target.value\n        });\n        console.log(this.state.newinputtext);\n      }\n    };\n\n    this.poststored = e => {\n      e.preventDefault();\n\n      if (this.state.editpostindex === null) {\n        this.state.inputusername.push(this.state.newinputusername);\n        this.state.inputpostcontent.push(this.state.newinputtext);\n        this.state.like.push(0);\n        this.state.dislike.push(0);\n        this.setState({\n          message: 1\n        });\n        this.setState({\n          newinputusername: ''\n        });\n        this.setState({\n          newinputtext: ''\n        });\n      } else {\n        const editedinputpostcontent = this.state.newinputtext;\n        this.state.inputpostcontent.splice(this.state.editpostindex, 1, editedinputpostcontent);\n        this.setState({\n          editpostindex: null\n        });\n      }\n\n      ;\n    };\n  }\n\n  render() {\n    let textinput = null; // let detailsignup=null;\n\n    if (this.state.inputpostcontent.length !== 0) {\n      // for showing posts\n      textinput = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: this.state.inputpostcontent.map((e, index) => {\n          return /*#__PURE__*/_jsxDEV(Showtext, {\n            username: this.state.inputusername[index],\n            postcontent: this.state.inputpostcontent[index],\n            clicklike: this.clicklike.bind(this, index),\n            clickdislike: this.clickdislike.bind(this, index),\n            likecnt: this.state.like[index],\n            dislikecnt: this.state.dislike[index],\n            edit: this.editpost.bind(this, index),\n            delete: this.deletepost.bind(this, index)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 65\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this);\n    } // if(this.state.Signupdetails){                                                    // for signup fields\n    //     detailsignup=(\n    //         <div>\n    //           <form onSubmit={this.verificationSignUp} >\n    //             {this.state.arrayFields.map((element,index) => {\n    //                return <Signup field={this.state.arrayFields[index]} type={this.state.arrayFieldstype[index]} changed={ this.valuetyped} click={this.valuestored}  key={index} />\n    //             })}\n    //             <button type=\"submit\" onClick={this.valuestored}>Submit</button>\n    //             </form>\n    //         </div>\n    //     );\n    // }\n\n\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 7\n      }, this), this.state.message ? /*#__PURE__*/_jsxDEV(Message, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 185,\n        columnNumber: 27\n      }, this) : null, /*#__PURE__*/_jsxDEV(Textinput, {\n        username: this.state.newinputusername,\n        setusername: this.username,\n        postcontent: this.state.newinputtext,\n        setpostcontent: this.postcontent,\n        textstored: this.poststored\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 7\n      }, this), textinput, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: this.showsignup,\n        children: \"Signup\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Signup, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(Signin, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 5\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Users/ANJANI IIT/OneDrive/Documents/React1/my-app/src/App.js"],"names":["React","Component","Signup","Signin","Textinput","Showtext","Message","Navbar","App","state","arrayvalue","editpostindex","inputvalue","inputvaluelength","newinputusername","newinputtext","inputpostcontent","inputusername","message","like","dislike","likecnt","editpost","index","setState","deletepost","splice","console","log","clicklike","newcnt","clickdislike","newcnt2","valuetyped","e","newinput","target","value","valuestored","length","push","shift","username","postcontent","poststored","preventDefault","editedinputpostcontent","render","textinput","map","bind","showsignup"],"mappings":"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","sourcesContent":["\nimport React,{Component} from 'react';\nimport Signup from './Signup.js';\nimport Signin from './SignIn.js';\nimport './App.css';\nimport  {Textinput,Showtext,Message, Navbar} from './Dashboard';\n\nclass App extends Component {\n \n  state={\n       arrayvalue:[\"name\"],\n      //  arrayFields:[\"Email Id\",\"Name\",\"Phone no.\",\"Password\",\"Confirm Password\"],\n      //  arrayFieldstype:[\"email\",\"text\",\"number\",\"password\",\"password\"],\n      //  Signupdetails:false,\n      //  SignIndetails:false,\n      editpostindex:null,\n      //  inputsigninemail:null,inputsigninpassword:null,\n       inputvalue:[],// input values for signup\n       inputvaluelength:5,newinputusername:'',newinputtext:' ',\n       inputpostcontent:[],inputusername:[],\n       message:0,\n       like:[],dislike:[],likecnt:0\n       \n\n  }\n  editpost = (index) =>{\n     this.setState({editpostindex:index});\n     this.setState({newinputusername:this.state.inputusername[index]});\n     this.setState({newinputtext:this.state.inputpostcontent[index]});\n  }\n  deletepost = (index) => {\n    const inputusername = this.state.inputusername;\n    const inputpostcontent = this.state.inputpostcontent;\n    inputpostcontent.splice(index,1);\n    inputusername.splice(index,1);\n    this.setState({inputusername:inputusername});\n    this.setState({inputpostcontent:inputpostcontent});\n    console.log(this.state.inputusername);\n    console.log(this.state.inputpostcontent);\n  }\n  clicklike =(index)=>{\n    let newcnt=this.state.like[index]+1;\n    this.state.like.splice(index,1,newcnt);\n    this.setState({editpostindex:null});// just to use setstate for rerendering cgnages\n    console.log(this.state.like);\n  }\n  clickdislike =(index)=>{\n    let newcnt2=this.state.dislike[index]+1;\n    this.state.dislike.splice(index,1,newcnt2);\n    this.setState({editpostindex:null});// just to use setstate for rerendering cgnages\n    console.log(this.state.dislike);\n  }\n \n  // verificationSignUp = () => {\n  //   if((this.state.inputvalue[this.state.inputvalue.length -2]===this.state.inputvalue[this.state.inputvalue.length-1])&&(this.state.inputvalue.length===5)){\n  //     alert(\"Signed Up successfully!!\");\n  //   }\n  //   if(((this.state.inputvalue[this.state.inputvalue.length -2]!==this.state.inputvalue[this.state.inputvalue.length -1])&&(this.state.inputvalue.length>=2))||this.state.inputvalue.length===0){\n  //     alert(\"Could not Sign-Up\");\n  //   }\n    \n  // }\n \n  // showsignup = () => {\n  //   if(this.state.inputvaluelength===5){\n  //     alert('Note: it is made for one time use only .Do not use Cookies, enter \"each Field\" on you own and wait for Correct status untill the \"submit\" button is pressed');\n  //     this.setState({inputvaluelength:1});\n      \n  //   }\n  //   else if(this.state.inputvaluelength===0){\n  //     this.state.inputvalue.shift();\n  //   }\n  //       const currentSignupdetails=this.state.Signupdetails;\n  //       this.setState({Signupdetails:!currentSignupdetails});\n  //   } \n    \n  // showsignIn = () => {\n  //     const currentSignIndetails=this.state.SignIndetails;\n  //     this.setState({SignIndetails:!currentSignIndetails});\n  // } \n  valuetyped = (e) => {\n    this.setState({newinput:e.target.value});\n  }\n  valuestored =()=>{\n    \n    if(this.state.inputvalue.length<=this.state.inputvaluelength){\n      this.state.inputvalue.push(this.state.newinput);\n    }\n    if(this.state.inputvalue.length===this.state.inputvaluelength+1){\n        this.state.inputvalue.shift();\n        this.setState({inputvaluelength:0});\n        \n    }\n   \n  }\n  \n  username = (e) =>{\n   \n    if(this.state.editpostindex===null){\n    this.setState({message:0});\n    this.setState({newinputusername:e.target.value});\n    console.log(this.state.newinputusername);\n     \n  }\n  \n  \n  }\n  postcontent = (e) =>{\n   \n  if(this.state.editpostindex===null){ // for differentiating between editing and creating a post \n    this.setState({newinputtext:e.target.value});\n\n  }\n  else{\n    this.setState({newinputtext:e.target.value});\n    console.log(this.state.newinputtext);\n  }\n\n  }\n  poststored = (e) =>{\n    e.preventDefault();\n    if(this.state.editpostindex===null){   \n    this.state.inputusername.push(this.state.newinputusername);\n    this.state.inputpostcontent.push(this.state.newinputtext);\n    this.state.like.push(0);\n    this.state.dislike.push(0); \n    this.setState({message:1});\n    this.setState({newinputusername:''});\n    this.setState({newinputtext:''});\n   \n  }\n   else{\n     \n     const editedinputpostcontent=this.state.newinputtext;\n     this.state.inputpostcontent.splice(this.state.editpostindex,1,editedinputpostcontent);\n     this.setState({editpostindex:null});\n     };\n    \n\n   }\n\nrender(){\n   \n    let textinput=null;\n    // let detailsignup=null;\n    \n   \n    if((this.state.inputpostcontent.length !==0)){                                        // for showing posts\n      textinput=(\n        <div>\n          {this.state.inputpostcontent.map(( e,index) =>{return <Showtext \n                                                             key={index}\n                                                             username={this.state.inputusername[index]}\n                                                             postcontent={this.state.inputpostcontent[index]} \n                                                             clicklike={this.clicklike.bind(this,index)}\n                                                             clickdislike={this.clickdislike.bind(this,index)} \n                                                             likecnt={this.state.like[index]} \n                                                             dislikecnt={this.state.dislike[index]}\n                                                             edit={this.editpost.bind(this,index)}\n                                                             delete={this.deletepost.bind(this,index)} /> })\n                                                             }\n        </div>\n      );\n    }\n    // if(this.state.Signupdetails){                                                    // for signup fields\n    //     detailsignup=(\n    //         <div>\n    //           <form onSubmit={this.verificationSignUp} >\n    //             {this.state.arrayFields.map((element,index) => {\n    //                return <Signup field={this.state.arrayFields[index]} type={this.state.arrayFieldstype[index]} changed={ this.valuetyped} click={this.valuestored}  key={index} />\n    //             })}\n    //             <button type=\"submit\" onClick={this.valuestored}>Submit</button>\n    //             </form>\n    //         </div>\n\n    //     );\n            \n        \n    // }\n  \n\n  return (\n    <div className=\"App\">\n      <Navbar/>\n      {this.state.message?<Message/>:null}\n      <Textinput username={this.state.newinputusername} setusername={this.username} postcontent={this.state.newinputtext} setpostcontent={this.postcontent} textstored={this.poststored} />\n      {textinput}\n      \n      <button type=\"button\"  onClick={this.showsignup} >Signup</button>\n      <Signup />\n      <Signin />\n\n    </div>\n  );\n}}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}