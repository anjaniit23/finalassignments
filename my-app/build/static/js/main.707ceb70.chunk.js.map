{"version":3,"sources":["actions/types.js","utils/setAuthToken.js","actions/authActions.js","Signup.js","SignIn.js","Navbar.js","actions/postactions.js","postform.js","postitem.js","postfeed.js","Post.js","validation/isempty.js","reducers/authReducer.js","reducers/errorReducer.js","reducers/postReducer.js","reducers/index.js","store.js","App.js","reportWebVitals.js","index.js"],"names":["GET_ERRORS","SET_CURRENT_USER","POST_LOADING","GET_POSTS","ADD_POST","DELETE_POST","setAuthToken","token","axios","defaults","headers","common","setCurrentUser","decoded","type","payload","logoutUser","dispatch","localStorage","removeItem","Signup","state","name","email","password","password2","errors","onChange","e","setState","target","value","onSave","preventDefault","console","log","newUser","props","registerUser","history","this","auth","isAuthenticated","push","nextProps","className","noValidate","onSubmit","bind","id","title","Component","connect","userData","post","then","res","catch","err","response","data","withRouter","Signin","loggedInUser","loginUser","token1","setItem","jwt_decode","Navbar","user","authLinks","to","onClick","onLogoutClick","src","avatar","alt","width","height","guestLinks","getPosts","setPostLoading","get","Postform","componentWillReceiveProps","newProps","newPost","text","addPost","postData","PostItem","deletePost","addLike","onDelete","_id","onLike","likes","length","delete","PostFeed","posts","map","Posts","postContent","loading","isEmpty","undefined","Object","keys","trim","initialState","combineReducers","action","filter","middleware","thunk","store","createStore","rootReducer","compose","applyMiddleware","window","__REDUX_DEVTOOLS_EXTENSION__","jwtToken","currenttime","Date","now","exp","location","href","App","path","component","exact","SignIn","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.707ceb70.chunk.js","sourcesContent":["export const GET_ERRORS='GET_ERRORS';\r\nexport const SET_CURRENT_USER='SET_CURRENT_USER';\r\nexport const POST_LOADING ='POST_LOADING';\r\nexport const GET_POSTS ='GET_POSTS';\r\nexport const GET_POST ='GET_POST';\r\nexport const ADD_POST ='ADD_POST';\r\nexport const DELETE_POST ='DELETE_POST';\r\n\r\n","import axios from 'axios';\r\n\r\n\r\nconst setAuthToken =token=>{\r\n    if(token){\r\n        //apply to every request\r\n        axios.defaults.headers.common['Authorization']=token;\r\n    }else{\r\n        //delete auth header\r\n        \r\n        delete axios.defaults.headers.common['Authorization'];\r\n    }\r\n};\r\n\r\nexport default setAuthToken;","import {GET_ERRORS,SET_CURRENT_USER} from './types';\r\nimport axios from 'axios';\r\nimport setAuthToken from '../utils/setAuthToken';\r\nimport jwt_decode from 'jwt-decode';\r\n//Register user\r\nexport const registerUser =(userData,history)=>dispatch=>{\r\n   axios.post(`/api/users/register`, userData)\r\n    .then(res=>history.push('/SignIn'))\r\n    .catch(err=>dispatch({\r\n        type:GET_ERRORS,\r\n        payload:err.response.data\r\n    }));\r\n};\r\n// // inside the state componet of SignUp.js..we could have used this.props.history.push('/Signin');\r\n// to direct tio login page whenever the Signup is done\r\n//login get user token\r\nexport const loginUser=userData=>dispatch=>{\r\n    axios.post(`/api/users/login`,userData)\r\n         .then(res=>{\r\n            \r\n             //save to localstorage\r\n             const token = res.data.token1;\r\n         \r\n             //set token to ls\r\n             localStorage.setItem('jwtToken',token);\r\n             //set token to auth header\r\n             setAuthToken(token);\r\n             // decode token to get user data\r\n             const decoded= jwt_decode(token);\r\n             //set current user\r\n             dispatch(setCurrentUser(decoded));\r\n         })\r\n         .catch(err=>{\r\n\r\n            dispatch({\r\n                type:GET_ERRORS,\r\n                payload:err.response.data\r\n            })});\r\n};\r\n\r\n//set logged in user\r\nexport const setCurrentUser=(decoded)=>{\r\n    return {\r\n        type:SET_CURRENT_USER,\r\n        payload:decoded\r\n    }\r\n}\r\n// log user out\r\nexport const logoutUser=()=>dispatch=>{\r\n    //remove token from localstorage\r\n    localStorage.removeItem('jwtToken');\r\n    //remove auth header for future requests\r\n    setAuthToken(false);\r\n    //set current user to {} which will set isAutheticated to false\r\n    dispatch(setCurrentUser({}));\r\n}\r\n","import React ,{Component} from 'react';\r\nimport './Signup.css';\r\nimport { connect} from 'react-redux';\r\nimport {registerUser} from './actions/authActions';\r\nimport PropTypes from 'prop-types';\r\nimport { withRouter} from 'react-router-dom';\r\n\r\n// const instance = axios.create({baseURL: \"https://localhost:3000\"});\r\n class Signup extends Component  { \r\n     state={\r\n           name:\"\",email:\"\",password:\"\",password2:\"\",errors:{}\r\n    \r\n     };\r\n      onChange=(e)=>{\r\n         this.setState({[e.target.name]:e.target.value});\r\n     }\r\n     componentDidMount(){\r\n        if(this.props.auth.isAuthenticated){\r\n              this.props.history.push('/dashboard');\r\n        }\r\n  }\r\n     componentWillReceiveProps(nextProps){\r\n         if(nextProps.errors){\r\n             this.setState({errors:nextProps.errors});\r\n         }\r\n     }\r\n\r\n     \r\n     onSave=(e)=>{\r\n         e.preventDefault();\r\n          console.log(this.state);\r\n         const newUser={\r\n             name:this.state.name,\r\n             email:this.state.email,\r\n             password:this.state.password,\r\n             password2:this.state.password2\r\n         };\r\n         this.props.registerUser(newUser,this.props.history);\r\n \r\n     }\r\n render(){\r\n  \r\n\r\n    return (\r\n        <div className=\"message\">\r\n          \r\n         <div className=\"signup\">\r\n         <form noValidate onSubmit={this.onSave.bind(this)}>\r\n         <div>\r\n          <ul>\r\n            <li>Name</li>\r\n            <li><input id=\"Name\" name=\"name\" type=\"text\" title={this.state.errors.name} value={this.state.name}  onChange={this.onChange.bind(this)} /></li>\r\n            <li className=\"warntext\">{this.state.errors.name}</li>\r\n            <li>Email-Id</li>\r\n            <li><input id=\"Email-Id\" name=\"email\" type=\"email\"  value={this.state.email}  onChange={this.onChange.bind(this)}/></li>\r\n            <li className=\"warntext\">{this.state.errors.email}</li>\r\n            <li>Password</li>\r\n            <li><input id=\"Password\" name=\"password\"  type=\"password\"  value={this.state.password}  onChange={this.onChange.bind(this)} /></li> \r\n            <li className=\"warntext\">{this.state.errors.password}</li>\r\n            <li>Confirm Password</li>\r\n            <li><input  id=\"Confirm Password\" name=\"password2\" type=\"password\" value={this.state.password2} onChange={this.onChange.bind(this)}/></li>\r\n            <li className=\"warntext\">{this.state.errors.password2}</li>\r\n            <li><button className=\"btn\" >Submit</button></li>\r\n            </ul>\r\n         </div>\r\n         </form>\r\n         </div>\r\n        </div>\r\n       \r\n    );\r\n    }\r\n}\r\n\r\nSignup.propTypes={\r\n    registerUser:PropTypes.func.isRequired,\r\n    auth:PropTypes.object.isRequired,\r\n    errors:PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps =(state)=>({\r\n     auth:state.auth,\r\n     errors:state.errors\r\n});\r\nexport default connect(mapStateToProps,{ registerUser})(withRouter(Signup));\r\n\r\n","  \r\nimport React ,{Component} from 'react';\r\n// import { findAllInRenderedTree } from 'react-dom/test-utils';\r\nimport './Signup.css';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport { loginUser } from './actions/authActions';\r\nimport { withRouter} from 'react-router-dom';\r\n\r\n\r\n\r\n  \r\nclass Signin extends Component  {\r\n        state={\r\n              email:\"\",password:\"\",errors:{}\r\n         \r\n          }\r\n        onChange=(e)=>{\r\n              this.setState({[e.target.name]:e.target.value});\r\n        }\r\n        componentDidMount(){\r\n              if(this.props.auth.isAuthenticated){\r\n                    this.props.history.push('/dashboard');\r\n              }\r\n        }\r\n        componentWillReceiveProps(nextProps){\r\n              \r\n              if(nextProps.auth.isAuthenticated){\r\n                    this.props.history.push('/dashboard');\r\n\r\n              }\r\n              if(nextProps.errors){\r\n                  this.setState({errors:nextProps.errors});\r\n              }\r\n        }\r\n        onSave=(e)=>{\r\n              e.preventDefault();\r\n              const loggedInUser={\r\n                  \r\n                  email:this.state.email,\r\n                  password:this.state.password\r\n              }\r\n              \r\n             this.props.loginUser(loggedInUser);\r\n        }\r\n  render(){\r\n        return (\r\n            <div className=\"message\">\r\n            <div className=\"signin\">\r\n            <form noValidate onSubmit={this.onSave.bind(this)}>\r\n            <div>\r\n             <ul>\r\n               <li>Email-Id</li>\r\n               <li><input id=\"Email-Id\" name=\"email\" type=\"email\"  value={this.state.email}  onChange={this.onChange.bind(this)}/></li>\r\n               <li className=\"warntext\">{this.state.errors.email}</li>\r\n               <li>Password</li>\r\n               <li><input id=\"Password\" name=\"password\"  type=\"password\"  value={this.state.password}  onChange={this.onChange.bind(this)} /></li> \r\n               <li className=\"warntext\">{this.state.errors.password}</li>\r\n               <li><button className=\"btn\" >Submit</button></li>\r\n               </ul>\r\n            </div>\r\n            </form>\r\n            </div>\r\n           </div>\r\n        );\r\n}}\r\nSignin.propTypes={\r\n      loginUser:PropTypes.func.isRequired,\r\n      auth:PropTypes.object.isRequired,\r\n      errors:PropTypes.object.isRequired\r\n}\r\n            \r\nconst mapStateToProps=(state)=>({\r\n      auth:state.auth,\r\n      errors:state.errors\r\n})\r\n\r\nexport default connect(mapStateToProps,{loginUser})(withRouter(Signin));","import React,{Component} from 'react';\r\nimport { Link, withRouter } from 'react-router-dom';\r\nimport './Dashboard.css';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport { logoutUser } from './actions/authActions';\r\n\r\nclass Navbar extends Component{\r\n  onLogoutClick(e){\r\n    e.preventDefault();\r\n    this.props.logoutUser();\r\n    this.props.history.push('/Signin');\r\n  }\r\n  render(){\r\n    const {isAuthenticated,user}= this.props.auth;\r\n    const authLinks =(\r\n         <ul>\r\n          <li><Link to=\"/dashboard\" ><span className=\"links\">Post-Section!</span></Link></li>\r\n          <li className=\"linklogout\"onClick={this.onLogoutClick.bind(this)}>logout</li>\r\n          <li className=\"avatar\"><div ><img src={user.avatar} alt={user.name} width=\"100%\" height=\"100%\"/></div></li>\r\n         </ul>\r\n\r\n    );\r\n    const guestLinks =(\r\n\r\n      <ul>\r\n         <li><Link to=\"/signup\"><span className=\"links\">Sign-Up</span></Link></li>\r\n         <li><Link to=\"/signin\"><span className=\"links\">Sign-In</span></Link></li>\r\n      </ul>\r\n\r\n    );\r\n    return( \r\n\r\n    <div className=\"navbar\">\r\n        {isAuthenticated===true?authLinks:guestLinks}\r\n    </div>);\r\n }\r\n}\r\nNavbar.propTypes={\r\n  logoutUser:PropTypes.func.isRequired,\r\n  auth:PropTypes.object.isRequired,\r\n\r\n}\r\n\r\nconst mapStateToProps=(state)=>({\r\n   auth:state.auth\r\n });\r\n\r\n\r\nexport default connect(mapStateToProps,{logoutUser})(withRouter(Navbar));\r\n","import axios from 'axios';\r\n\r\nimport { GET_ERRORS,ADD_POST,GET_POSTS,POST_LOADING ,DELETE_POST} from './types';\r\n\r\n\r\n//add post\r\nexport const addPost=(postData)=>dispatch=>{\r\n    axios\r\n         .post(\"/api/posts\",postData)\r\n         .then(res=>\r\n            dispatch({\r\n                type:ADD_POST,\r\n                payload:res.data\r\n            }))\r\n        .catch(err=>{\r\n            dispatch({\r\n                type:GET_ERRORS,\r\n                payload:err.response.data\r\n            })});\r\n};\r\n//get posts\r\nexport const getPosts=()=>dispatch=>{\r\n    dispatch(setPostLoading());\r\n    axios\r\n         .get(\"/api/posts\")\r\n         .then(res=>\r\n            dispatch({\r\n                type:GET_POSTS,\r\n                payload:res.data\r\n            }))\r\n        .catch(err=>{\r\n            dispatch({\r\n                type:GET_POSTS,\r\n                payload:null\r\n            })});\r\n};\r\n//add like\r\nexport const addLike=(id)=>dispatch=>{\r\n    dispatch(setPostLoading());\r\n    axios\r\n         .post(`/api/posts/like/${id}`)\r\n         .then(res=>\r\n            dispatch(getPosts()))\r\n        .catch(err=>{\r\n            dispatch({\r\n                type:GET_ERRORS,\r\n                payload:err.response.data\r\n            })});\r\n};\r\n\r\n//delete post\r\nexport const deletePost=(id)=>dispatch=>{\r\n    dispatch(setPostLoading());\r\n    axios\r\n         .delete(`/api/posts/${id}`)\r\n         .then(res=>\r\n            dispatch({\r\n                type:DELETE_POST,\r\n                payload:id\r\n            }))\r\n        .catch(err=>{\r\n            dispatch({\r\n                type:GET_ERRORS,\r\n                payload:err.response.data\r\n            })});\r\n};\r\n//set loading state\r\n\r\nexport const setPostLoading=()=>{\r\n    return {\r\n        type:POST_LOADING\r\n    }\r\n}\r\n\r\n\r\n\r\n\r\n","import React,{Component} from 'react';\r\nimport './Dashboard.css';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\n// import { logoutUser } from './actions/authActions';\r\nimport {addPost} from './actions/postactions';\r\nimport { withRouter } from 'react-router';\r\n\r\nclass Postform extends Component{\r\n   constructor(props){\r\n       super(props);\r\n       this.state={\r\n         text:\"\",errors:{}\r\n      }\r\n\r\n   }\r\n   \r\n   \r\n   onChange=(e)=>{\r\n      this.setState({[e.target.name]:e.target.value});\r\n\r\n   }\r\n   componentWillReceiveProps=(newProps)=>{\r\n      if(newProps.errors){\r\n         this.setState({errors:newProps.errors})\r\n\r\n      }\r\n\r\n   }\r\n   onSubmit=(e)=>{\r\n      e.preventDefault();\r\n      console.log(this.props);\r\n      const {user}=this.props.auth;\r\n      console.log(\"yeah,inside the onsumbit\");\r\n      const newPost={\r\n         text:this.state.text,\r\n         name:user.name,\r\n         avatar:user.avatar\r\n      };\r\n      this.props.addPost(newPost);\r\n      this.setState({text :'',errors:{}});\r\n      \r\n   }\r\n render(){\r\n\r\n    return(\r\n        <div >\r\n           <div className=\"posttitle\" >\r\n              <form onSubmit={this.onSubmit.bind(this)}>\r\n              <ul>\r\n               <li className=\"headingtext\">Enter Your Post</li>\r\n               <li><input name=\"text\" className=\"inputbox\" type=\"textbox\" value={this.state.text} onChange={this.onChange.bind(this)} /></li>\r\n               <li className=\"warntext\">{this.state.errors.text}</li>\r\n               <li><button className=\"btn\" type=\"submit\" >Submit</button></li>\r\n               </ul>\r\n               </form>\r\n           </div>\r\n        </div>\r\n    ); }\r\n }\r\nPostform.propTypes={\r\n   addPost:PropTypes.func.isRequired,\r\n   auth:PropTypes.object.isRequired,\r\n   errors:PropTypes.object.isRequired\r\n}\r\nconst mapStateToProps=(state)=>({\r\n   auth:state.auth,\r\n   errors:state.errors\r\n})\r\n\r\n export default connect(mapStateToProps,{addPost})(withRouter(Postform));","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {deletePost,addLike} from './actions/postactions';\r\n\r\n\r\nclass PostItem extends Component {\r\n\r\n    onDelete(id){\r\n        console.log(\"in delete section\");\r\n        this.props.deletePost(id);\r\n    }\r\n    \r\n    onLike(id){\r\n\r\n        this.props.addLike(id);\r\n   \r\n\r\n    }\r\n        render() {\r\n            const {post,auth}=this.props;\r\n            return (\r\n                <div>\r\n                    <div className=\"post\">\r\n                    <div className=\"upper\">\r\n                      <p className=\"postusername\">\r\n                          <img src={post.avatar} alt=\"\"/>&nbsp;{post.name}\r\n                      </p>\r\n                       {post.user===auth.user.id?(<button type=\"button\" onClick={this.onDelete.bind(this,post._id)} className=\"delete\" >&#10062;</button>):null}\r\n                    </div>\r\n                    <p className=\"postcontent\">{post.text}</p>\r\n                       <div className=\"likes\">\r\n                        <button type=\"button\" onClick={this.onLike.bind(this,post._id)} >&#128077;</button>\r\n                        <p className=\"textlike\">{post.likes.length}</p>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n    };\r\n\r\nPostItem.propTypes={\r\n    deletePost:PropTypes.func.isRequired,\r\n    addLike:PropTypes.func.isRequired,\r\n    removeLike:PropTypes.func.isRequired,   \r\n    post:PropTypes.object.isRequired,\r\n    auth:PropTypes.object.isRequired\r\n}   \r\n\r\nconst mapStateToProps=state=>({\r\n    auth:state.auth\r\n\r\n});\r\n    \r\nexport default connect(mapStateToProps,{deletePost,addLike})(PostItem)\r\n    ","    import React, { Component } from 'react';\r\n    import PropTypes from 'prop-types';\r\n    import PostItem from './postitem';\r\n    \r\n   class PostFeed extends Component {\r\n        render() {\r\n\r\n            const {posts}=this.props;\r\n            return (\r\n               posts.map(post =><PostItem key={post._id} post={post}/>)\r\n            )\r\n        }\r\n    };\r\n    \r\n    PostFeed.propTypes={\r\n        posts:PropTypes.array.isRequired\r\n    }\r\n    export default PostFeed;\r\n    ","import React,{Component} from 'react';\r\nimport './Dashboard.css';\r\nimport Postform from './postform';\r\nimport PropTypes from 'prop-types';\r\nimport {connect} from 'react-redux';\r\nimport {getPosts} from './actions/postactions';\r\nimport PostFeed from './postfeed';\r\n\r\nclass Posts extends Component {\r\n\r\n  componentDidMount(){\r\n    this.props.getPosts();\r\n  \r\n  }\r\nrender(){\r\n   \r\n     const { posts , loading}=this.props.post;\r\n     let postContent;\r\n\r\n     if(posts===null||loading){\r\n         postContent=\"No posts till Date!\";\r\n     }else{\r\n       postContent=<PostFeed posts={posts}/>\r\n     }\r\n      return(\r\n          <div>\r\n            <Postform/>\r\n            {postContent} \r\n          </div>\r\n\r\n      );\r\n\r\n}};\r\n\r\nPosts.propTypes={\r\n  getPosts:PropTypes.func.isRequired,\r\n  post:PropTypes.object.isRequired,\r\n\r\n}\r\nconst mapStateToProps=state=>({\r\n  post:state.post\r\n});\r\nexport default connect(mapStateToProps,{getPosts})(Posts)\r\n\r\n\r\n","const isEmpty=(value)=>{\r\n    return(\r\n        value===undefined ||\r\n        value===null  ||\r\n        (typeof value==='object' && Object.keys(value).length===0)||\r\n        (typeof value==='string' && value.trim().length===0)\r\n    );\r\n }\r\nexport default  isEmpty;","import isEmpty from '../validation/isempty';\r\nimport { SET_CURRENT_USER } from \"../actions/types\";\r\n\r\n\r\nconst initialState={\r\n    isAuthenticated:false,\r\n    user :{}\r\n}\r\n\r\nexport default function authReducer (state=initialState,action) {\r\n\r\n   switch (action.type) {\r\n       case SET_CURRENT_USER:\r\n           return{\r\n               ...state,\r\n               isAuthenticated: !isEmpty(action.payload),\r\n               user:action.payload\r\n           }\r\n       default:\r\n           return state;\r\n   } \r\n}","\r\nimport { GET_ERRORS } from \"../actions/types\";\r\nconst initialState={};\r\n\r\nexport default function errorReducer (state=initialState,action) {\r\n\r\n   switch (action.type) {\r\n       case GET_ERRORS:\r\n         return action.payload;\r\n       default:\r\n           return state;\r\n   } \r\n}","import {ADD_POST,GET_POSTS,POST_LOADING,DELETE_POST} from '../actions/types';\r\n\r\nconst initialState={\r\n    posts:[],\r\n    post:{},\r\n    loading:false\r\n};\r\n\r\n\r\nexport default function postReducer(state=initialState,action){\r\n    \r\n    switch(action.type){\r\n        case POST_LOADING:\r\n            return{\r\n                ...state,\r\n                loading:true\r\n            };\r\n        case GET_POSTS:\r\n            return{\r\n                ...state,\r\n                posts:action.payload,\r\n                loading:false\r\n            };\r\n        case ADD_POST:\r\n            return{\r\n                ...state ,\r\n                posts:[action.payload, ...state.posts],\r\n                loading:false\r\n            };\r\n        case DELETE_POST:\r\n            return {\r\n                ...state,\r\n                posts:state.posts.filter(post=>post._id !==action.payload),\r\n                loading:false\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport authReducer from './authReducer';\r\nimport errorReducer from './errorReducer';\r\nimport postReducer from './postReducer';\r\n\r\n\r\n\r\nexport default  combineReducers({\r\n    auth:authReducer,\r\n    errors :errorReducer,\r\n    post:postReducer\r\n});","import { applyMiddleware, createStore,compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport rootReducer from './reducers/index';\r\n\r\nconst initialState={};\r\n\r\n\r\nconst middleware=[thunk];\r\n\r\nconst store=createStore( \r\n    rootReducer  ,\r\n    initialState ,\r\n    compose(\r\n        applyMiddleware(...middleware),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n        )\r\n    );//1st parameter is reducer\r\nexport default store;\r\n","import React,{Component} from 'react';\nimport Signup from './Signup.js';\nimport SignIn from './SignIn.js';\nimport Navbar from './Navbar.js';\nimport Posts  from './Post.js';\nimport { BrowserRouter as Router, Route,Switch} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport store from './store';\nimport setAuthToken from './utils/setAuthToken.js';\nimport jwt_decode from 'jwt-decode';\nimport { logoutUser, setCurrentUser } from './actions/authActions.js';\n\n//check for token and een if we switch pages and efresh it it wont affect the localstorgae jwttoken\nif(localStorage.jwtToken){\n  //set auth token header auth\n  setAuthToken(localStorage.jwtToken);\n  //decode token and get user info and exp\n  const decoded = jwt_decode(localStorage.jwtToken);\n  //set user and isAuthenticated\n  store.dispatch(setCurrentUser(decoded));\n  //check for expired token\n  const currenttime= Date.now()/1000;\n  if(decoded.exp<currenttime){\n    //logout user\n    store.dispatch(logoutUser());\n    //redirect to login page\n    window.location.href='/Signin';\n  }\n}\nclass App extends Component {\nrender(){\n \n  return (\n    \n    <Provider store={store}>\n      <div className=\"app\">\n      <Router>\n        <div className=\"navbardiv\">\n        <Route  path=\"/\"  component={Navbar}/>\n        </div>\n        <div className=\"restpagestdiv\">\n          <Switch><Route exact path=\"/dashboard\"  component={Posts}/></Switch>\n          <Switch><Route exact path=\"/Signup\" component={Signup}/></Switch>\n          <Switch><Route exact path=\"/SignIn\" component={SignIn}/></Switch>\n        </div>\n      </Router>\n      </div>\n    </Provider>\n  );\n}}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.js';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}